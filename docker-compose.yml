version: '3.9'

services:
  frontend:
    build:
      context: ./frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - tfnet

  backend:
    build:
      context: ./backend
    command: uvicorn main:app --host 0.0.0.0 --port 8000
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
    networks:
      - tfnet

  bot:
    build:
      context: ./bot
    command: python bot.py
    volumes:
      - ./bot:/app
    env_file:
      - .env
    restart: always
    depends_on:
      - db
    networks:
      - tfnet

  db:
    image: postgres:16-alpine
    restart: always
    environment:
      POSTGRES_DB: tf121
      POSTGRES_USER: tfuser
      POSTGRES_PASSWORD: tfpass
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - tfnet

volumes:
  pgdata:

networks:
  tfnet:
    driver: bridge
